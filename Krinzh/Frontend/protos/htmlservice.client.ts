// @generated by protobuf-ts 2.8.2
// @generated from protobuf file "htmlservice.proto" (package "grpcservices", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { HTMLService } from "./htmlservice";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { HTMLResponse } from "./htmlservice";
import type { Empty } from "./google/protobuf/empty";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service grpcservices.HTMLService
 */
export interface IHTMLServiceClient {
    /**
     * @generated from protobuf rpc: GetIndex(google.protobuf.Empty) returns (grpcservices.HTMLResponse);
     */
    getIndex(input: Empty, options?: RpcOptions): UnaryCall<Empty, HTMLResponse>;
}
/**
 * @generated from protobuf service grpcservices.HTMLService
 */
export class HTMLServiceClient implements IHTMLServiceClient, ServiceInfo {
    typeName = HTMLService.typeName;
    methods = HTMLService.methods;
    options = HTMLService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetIndex(google.protobuf.Empty) returns (grpcservices.HTMLResponse);
     */
    getIndex(input: Empty, options?: RpcOptions): UnaryCall<Empty, HTMLResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, HTMLResponse>("unary", this._transport, method, opt, input);
    }
}
