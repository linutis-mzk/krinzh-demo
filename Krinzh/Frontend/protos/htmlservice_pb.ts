// @generated by protoc-gen-es v0.2.1 with parameter "target=ts"
// @generated from file htmlservice.proto (package grpcservices, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message grpcservices.HTMLResponse
 */
export class HTMLResponse extends Message<HTMLResponse> {
  /**
   * @generated from field: string content = 1;
   */
  content = "";

  constructor(data?: PartialMessage<HTMLResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "grpcservices.HTMLResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HTMLResponse {
    return new HTMLResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HTMLResponse {
    return new HTMLResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HTMLResponse {
    return new HTMLResponse().fromJsonString(jsonString, options);
  }

  static equals(a: HTMLResponse | PlainMessage<HTMLResponse> | undefined, b: HTMLResponse | PlainMessage<HTMLResponse> | undefined): boolean {
    return proto3.util.equals(HTMLResponse, a, b);
  }
}

